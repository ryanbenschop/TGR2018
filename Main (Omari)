/*
    Functions of the Bot:

    Drivetrain (X drive)
        - 4 Hd Motors
    4 Bar System
         - 2 Core Hex Motors
    Pincers
         - 2 Servos
     Conveyor System
        - 2 Core Hex Motors
        - 1 Servo
 */

package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.hardware.HardwareMap;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.util.ElapsedTime;

@TeleOp(name="Main", group="Practice-Bot")

public class Main extends LinearOpMode {
    // Drivetrain Variables
    DcMotor frontRightDrive;
    DcMotor frontLeftDrive;
    DcMotor backLeftDrive;
    DcMotor backRightDrive;
    // (Exact Values TBD)
    Double frontRightDrivePower = 0.0;
    Double frontLeftDrivePower = 0.0;
    Double backleftDrivePower = 0.0;
    Double backRightDrivePower = 0.0;

    // Conveyor
    DcMotor leftConveyor;
    DcMotor rightConveyor;
    Servo backdoorConveyor;
    // (Exact Values TBD)
    Double backdoorConveyorOpen = 0.0;
    Double backdoorConveyorClosed = 0.0;

    // 4 Bar
    DcMotor leftFourBar;
    DcMotor rightFourBar;

    // Pincers
    Servo leftPincer;
    Servo rightPincer;
    // (Exact Values TBD)
    Double pincerLeftOpen = 0.0;
    Double pincerLeftClose = 0.0;
    Double pincerRightOpen = 0.0;
    Double pincerRightClose = 0.0;
    Double pincerLeftFunnel = 0.0;
    Double pincerRightFunnel = 0.0;
    Double pincerLeftBoxAlign = 0.0;
    Double pincerRightBoxAlign = 0.0;

    private ElapsedTime period = new ElapsedTime();

    private void waitForTick(long periodMs) throws java.lang.InterruptedException
    {
        long remaining = periodMs - (long)period.milliseconds();
        if(remaining > 0) {
            Thread.sleep(remaining);
        }
        period.reset();
    }

    @Override
    public void runOpMode()
    {
        // Drivetrain
        frontRightDrive = hardwareMap.dcMotor.get("front_right");
        frontLeftDrive = hardwareMap.dcMotor.get("front_left");
        backLeftDrive = hardwareMap.dcMotor.get("back_left");
        backRightDrive = hardwareMap.dcMotor.get("back_right");

        //Conveyor
        leftConveyor = hardwareMap.dcMotor.get("conveyor_motor_left");
        rightConveyor = hardwareMap.dcMotor.get("conveyor_motor_right");
        backdoorConveyor = hardwareMap.servo.get("conveyor_door_servo");

        // 4 Bar
        leftFourBar = hardwareMap.dcMotor.get("left_arm_motor");
        rightFourBar = hardwareMap.dcMotor.get("right_arm_motor");

        // Pincers
        leftPincer = hardwareMap.servo.get("funnel_left_servo");
        rightPincer = hardwareMap.servo.get("funnel_right_servo");

        // Setting Motors to run using Encoders
        // Drivetrain
        frontRightDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        frontLeftDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        backLeftDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        backRightDrive.setMode(DcMotor.RunMode.RUN_USING_ENCODER);

        // Conveyor
        rightConveyor.setMode(DcMotor.RunMode.RUN_USING_ENCODER);
        leftConveyor.setMode(DcMotor.RunMode.RUN_USING_ENCODER);

        // 4 Bar
        rightFourBar.setMode(DcMotor.RunMode.RUN_TO_POSITION);
        leftFourBar.setMode(DcMotor.RunMode.RUN_TO_POSITION);

        // Set Zero Power Behavior
        // Drivetrain
        frontRightDrive.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        frontLeftDrive.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        backLeftDrive.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        backRightDrive.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);

        // Conveyor
        rightConveyor.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        leftConveyor.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);

        // 4 Bar
        leftFourBar.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        rightFourBar.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);

        // Set Motor Powers to 0
        // Drivetrain
        frontRightDrive.setPower(0);
        frontLeftDrive.setPower(0);
        backLeftDrive.setPower(0);
        backRightDrive.setPower(0);

        // Conveyor
        leftConveyor.setPower(0);
        rightConveyor.setPower(0);

        // 4 bar
        rightFourBar.setPower(0);
        leftFourBar.setPower(0);

        waitForStart();
        try
        {
            while(opModeIsActive())
            {
                // Drivetrain
                if(gamepad1.left_stick_x > 0)
                {
                    frontRightDrive.setPower(-gamepad1.left_stick_x);
                    frontLeftDrive.setPower(-gamepad1.left_stick_x);
                    backLeftDrive.setPower(gamepad1.left_stick_x);
                    backRightDrive.setPower(gamepad1.left_stick_x);
                }

                if(gamepad1.left_stick_x < 0)
                {
                    frontRightDrive.setPower(gamepad1.left_stick_x);
                    frontLeftDrive.setPower(gamepad1.left_stick_x);
                    backLeftDrive.setPower(-gamepad1.left_stick_x);
                    backRightDrive.setPower(-gamepad1.left_stick_x);
                }

                if(gamepad1.left_stick_x == 0)
                {
                    frontRightDrive.setPower(frontRightDrivePower);
                    frontLeftDrive.setPower(frontLeftDrivePower);
                    backLeftDrive.setPower(backleftDrivePower);
                    backRightDrive.setPower(backRightDrivePower);
                }

                if(gamepad1.left_stick_y > 0)
                {
                    frontRightDrive.setPower(gamepad1.left_stick_y);
                    frontLeftDrive.setPower(-gamepad1.left_stick_y);
                    backLeftDrive.setPower(-gamepad1.left_stick_y);
                    backRightDrive.setPower(gamepad1.left_stick_y);
                }

                if(gamepad1.left_stick_y < 0)
                {
                    frontRightDrive.setPower(-gamepad1.left_stick_y);
                    frontLeftDrive.setPower(gamepad1.left_stick_y);
                    backLeftDrive.setPower(gamepad1.left_stick_y);
                    backRightDrive.setPower(-gamepad1.left_stick_y);
                }

                if(gamepad1.left_stick_y == 0)
                {
                    frontRightDrive.setPower(frontRightDrivePower);
                    frontLeftDrive.setPower(frontLeftDrivePower);
                    backLeftDrive.setPower(backleftDrivePower);
                    backRightDrive.setPower(backRightDrivePower);
                }

                if(gamepad1.right_stick_y > 0)
                {
                    frontRightDrive.setPower(gamepad1.right_stick_y);
                    frontLeftDrive.setPower(gamepad1.right_stick_y);
                    backLeftDrive.setPower(gamepad1.right_stick_y);
                    backRightDrive.setPower(gamepad1.right_stick_y);
                }

                if(gamepad1.right_stick_y < 0)
                {
                    frontRightDrive.setPower(-gamepad1.right_stick_y);
                    frontLeftDrive.setPower(-gamepad1.right_stick_y);
                    backLeftDrive.setPower(-gamepad1.right_stick_y);
                    backRightDrive.setPower(-gamepad1.right_stick_y);
                }

                if(gamepad1.right_stick_y == 0)
                {
                    frontRightDrive.setPower(frontRightDrivePower);
                    frontLeftDrive.setPower(frontLeftDrivePower);
                    backLeftDrive.setPower(backleftDrivePower);
                    backRightDrive.setPower(backRightDrivePower);
                }

                // Conveyor
                if(gamepad2.right_stick_y > 0)
                {
                    leftConveyor.setPower(gamepad2.right_stick_y);
                    rightConveyor.setPower(-gamepad2.right_stick_y);
                }

                if(gamepad2.right_stick_y < 0)
                {
                    leftConveyor.setPower(-gamepad2.right_stick_y);
                    rightConveyor.setPower(gamepad2.right_stick_y);
                }

                if(gamepad2.right_stick_y == 0)
                {
                    leftConveyor.setPower(0);
                    rightConveyor.setPower(0);
                }

                leftConveyor.setPower(gamepad2.right_stick_y);
                rightConveyor.setPower(gamepad2.right_stick_y);
                
                // 4 Bar
                if(gamepad2.left_stick_y > 0)
                {
                    leftFourBar.setPower(gamepad2.left_stick_y);
                    rightFourBar.setPower(gamepad2.left_stick_y);
                }

                if(gamepad2.left_stick_y < 0)
                {
                    leftFourBar.setPower(-gamepad2.left_stick_y);
                    rightFourBar.setPower(-gamepad2.left_stick_y);
                }

                if(gamepad2.left_stick_y == 0)
                {
                    leftFourBar.setPower(0);
                    rightFourBar.setPower(0);
                }

                // Pincers
                if(gamepad1.x)
                {
                    leftPincer.setPosition(pincerLeftOpen);
                    rightPincer.setPosition(pincerRightOpen);
                }

                if(gamepad1.y)
                {
                    leftPincer.setPosition(pincerLeftFunnel);
                    rightPincer.setPosition(pincerRightFunnel);
                }

                if(gamepad1.b)
                {
                    leftPincer.setPosition(pincerLeftBoxAlign);
                    rightPincer.setPosition(pincerRightBoxAlign);
                }

                if(gamepad1.a)
                {
                    leftPincer.setPosition(pincerLeftClose);
                    rightPincer.setPosition(pincerRightClose);
                }

                waitForTick(40);
            }
        }
        catch (java.lang.InterruptedException exc) {
            return;
        }
        finally {
            frontRightDrive.setPower(0);
            frontLeftDrive.setPower(0);
            backLeftDrive.setPower(0);
            backRightDrive.setPower(0);
            rightConveyor.setPower(0);
            leftConveyor.setPower(0);
            leftFourBar.setPower(0);
            rightFourBar.setPower(0);
        }
    }

}
